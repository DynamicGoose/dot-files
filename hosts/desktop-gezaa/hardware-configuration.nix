# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  
  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/82a90dce-1328-4530-b069-704cfc54ab01";
      fsType = "btrfs";
    };
    "/boot" = {
      device = "/dev/disk/by-uuid/B1A0-C6FD";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };
    "/nix" = {
      device = "/dev/disk/by-label/nix";
      fsType = "btrfs";
      neededForBoot = true;
      options = ["noatime"];
    };
    "/run/media/gezaa/HDD01" = {
      device = "/dev/disk/by-label/HDD01";
      fsType = "ntfs-3g";
      options = ["rw" "uid=1000"];
    };
    "/run/media/gezaa/SSD02" = {
      device = "/dev/disk/by-label/SSD02";
      fsType = "ext4";
    };
  };
  
  swapDevices =
    [ { device = "/dev/disk/by-uuid/14714807-dbf6-43c0-a138-af719987e17a"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp8s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
